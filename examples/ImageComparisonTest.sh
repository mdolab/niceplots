#!/bin/bash

# This script compares the images generated by the example scripts to a set of reference images

test_passed=true # Keep track of whether any tests fail
tolerance=0.05

# First check that there aren't any images produced by the examples that don't have a reference image
for f in *.png
do
    if ! test -f "ref/$f"; then
        echo ""
        echo "$f doesn't have a reference image to compare to"
        test_passed=false
    fi
done

mkdir -p diffs

# For each image in the ref directory, check that there is a corresponding image in the current directory and then compare them
for f in ref/*.png
do
    echo ""
    base_name=$(basename ${f})

    if test -f "$base_name"; then
        filename_no_ext="${base_name%.*}"
        echo "Comparing $base_name and $f"
        output=$(odiff --parsable-stdout --antialiasing --diff-mask $base_name $f diffs/${filename_no_ext}-diff.png)
        # echo "$output"
        if [[ -z "$output" ]]; then
            echo "Images match"
        else
            outputArray=(${output//;/ }) # Split the output by the semicolon
            diffPixels=${outputArray[0]}
            diffPercentage=$(printf "%.8f\n" ${outputArray[1]}) # use printf to convert scientific notation to decimal
            echo "Difference = $diffPixels pixels ($diffPercentage %)"
            if (( $(echo "$diffPercentage > $tolerance" | bc -l) )); then
                echo "Difference is greater than $tolerance % so test failed"
                test_passed=false
            fi
        fi
    else
        echo "Couldn't find image to compare against $f"
        test_passed=false
    fi
done

echo ""
echo "==========================="
if [ "$test_passed" = true ] ; then
    echo "All comparisons passed"
    echo "==========================="
    exit 0
else
    echo "Some comparisons failed"
    echo "==========================="
    exit 1
fi
